// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SamuraiWebAPI.Data;

#nullable disable

namespace SamuraiWebAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220717180823_changetypeWeightToDecimal")]
    partial class changetypeWeightToDecimal
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BattleDemon", b =>
                {
                    b.Property<int>("BattlesId")
                        .HasColumnType("int");

                    b.Property<int>("DemonsId")
                        .HasColumnType("int");

                    b.HasKey("BattlesId", "DemonsId");

                    b.HasIndex("DemonsId");

                    b.ToTable("BattleDemon");
                });

            modelBuilder.Entity("BattleSamurai", b =>
                {
                    b.Property<int>("BattlesId")
                        .HasColumnType("int");

                    b.Property<int>("SamuraisId")
                        .HasColumnType("int");

                    b.HasKey("BattlesId", "SamuraisId");

                    b.HasIndex("SamuraisId");

                    b.ToTable("BattleSamurai");
                });

            modelBuilder.Entity("DemonElement", b =>
                {
                    b.Property<int>("DemonsId")
                        .HasColumnType("int");

                    b.Property<int>("ElementsId")
                        .HasColumnType("int");

                    b.HasKey("DemonsId", "ElementsId");

                    b.HasIndex("ElementsId");

                    b.ToTable("DemonElement");
                });

            modelBuilder.Entity("ElementSword", b =>
                {
                    b.Property<int>("ElementsId")
                        .HasColumnType("int");

                    b.Property<int>("SwordsId")
                        .HasColumnType("int");

                    b.HasKey("ElementsId", "SwordsId");

                    b.HasIndex("SwordsId");

                    b.ToTable("ElementSword");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Demon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Demons");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Samurai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Samurais");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Sword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SamuraiId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SamuraiId");

                    b.ToTable("Swords");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.TypeSword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SwordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SwordId")
                        .IsUnique();

                    b.ToTable("TypeSwords");
                });

            modelBuilder.Entity("BattleDemon", b =>
                {
                    b.HasOne("SamuraiWebAPI.Models.Battle", null)
                        .WithMany()
                        .HasForeignKey("BattlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamuraiWebAPI.Models.Demon", null)
                        .WithMany()
                        .HasForeignKey("DemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BattleSamurai", b =>
                {
                    b.HasOne("SamuraiWebAPI.Models.Battle", null)
                        .WithMany()
                        .HasForeignKey("BattlesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamuraiWebAPI.Models.Samurai", null)
                        .WithMany()
                        .HasForeignKey("SamuraisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DemonElement", b =>
                {
                    b.HasOne("SamuraiWebAPI.Models.Demon", null)
                        .WithMany()
                        .HasForeignKey("DemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamuraiWebAPI.Models.Element", null)
                        .WithMany()
                        .HasForeignKey("ElementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ElementSword", b =>
                {
                    b.HasOne("SamuraiWebAPI.Models.Element", null)
                        .WithMany()
                        .HasForeignKey("ElementsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SamuraiWebAPI.Models.Sword", null)
                        .WithMany()
                        .HasForeignKey("SwordsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Sword", b =>
                {
                    b.HasOne("SamuraiWebAPI.Models.Samurai", "Samurai")
                        .WithMany("Swords")
                        .HasForeignKey("SamuraiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Samurai");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.TypeSword", b =>
                {
                    b.HasOne("SamuraiWebAPI.Models.Sword", null)
                        .WithOne("TypeSword")
                        .HasForeignKey("SamuraiWebAPI.Models.TypeSword", "SwordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Samurai", b =>
                {
                    b.Navigation("Swords");
                });

            modelBuilder.Entity("SamuraiWebAPI.Models.Sword", b =>
                {
                    b.Navigation("TypeSword")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
